class Solution {
public:
    
   /**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

    
    int sum=0;
    
    void dfs(TreeNode* root){
         // int sum=0;
        if(root==NULL){
            return ;
        }
        // if(root->val%2!=0){
        //     for(int i=0;i<root->children.size();i++){
        //        sumEvenGrandparent(root->children[i]); 
        //     }
        // }
        if(root->val%2==0){
            // int ans=root->left->left +root->left->right + root->right->left +root->right->right
            if(root->left!=NULL){
                if(root->left->left!=NULL){
                    sum+=root->left->left->val;
                }
                 if(root->left->right!=NULL){
                    sum+=root->left->right->val;
                }
            }
            if(root->right!=NULL){
               if(root->right->left!=NULL){
                    sum+=root->right->left->val;
                }
                 if(root->right->right!=NULL){
                    sum+=root->right->right->val;
                } 
            }
        }
        
        dfs(root->left);
        dfs(root->right);
    }
    int sumEvenGrandparent(TreeNode* root) {
       dfs(root);
        return sum;
    }
};
